{"ast":null,"code":"var _jsxFileName = \"/home/sayone-183/Projects/Learning/AI/covid-faq-bot/frontend/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport './Chatbot.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const chatboxRef = useRef(null);\n  useEffect(() => {\n    setTimeout(() => {\n      setMessages([{\n        text: \"Hey there! How can I help you?\",\n        sender: \"bot\"\n      }]);\n    }, 2000);\n  }, []);\n  useEffect(() => {\n    if (chatboxRef.current) {\n      chatboxRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [messages]);\n  const handleChat = async () => {\n    if (!question.trim()) return;\n    const userMessage = {\n      text: question,\n      sender: \"user\"\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/ask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          question\n        }) // ✅ Fixed request body format\n      });\n      if (!response.ok) {\n        throw new Error(`Server Error: ${response.status}`);\n      }\n      const data = await response.json(); // ✅ Properly parsing JSON response\n      const botReply = data.response || \"Sorry, I couldn't process that.\"; // ✅ Extract response correctly\n\n      const botMessage = {\n        text: botReply,\n        sender: \"bot\"\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n      setQuestion(\"\");\n    } catch (error) {\n      toast.error(error.message || \"Something went wrong!\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        ref: index === messages.length - 1 ? chatboxRef : null,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ask something...\",\n        value: question,\n        onChange: e => setQuestion(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && handleChat()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleChat,\n        disabled: isLoading,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `bi bi-arrow-up-circle-fill ${isLoading ? \"loading\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatbot, \"H36t+DqDt+fa4AHnhyHcs0swuyM=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["useEffect","useRef","useState","toast","jsxDEV","_jsxDEV","Chatbot","_s","question","setQuestion","messages","setMessages","isLoading","setIsLoading","chatboxRef","setTimeout","text","sender","current","scrollIntoView","behavior","handleChat","trim","userMessage","prevMessages","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","botReply","botMessage","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","ref","length","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/sayone-183/Projects/Learning/AI/covid-faq-bot/frontend/src/components/Chatbot.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport './Chatbot.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from \"react-toastify\";\n\nfunction Chatbot() {\n    const [question, setQuestion] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const chatboxRef = useRef(null);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setMessages([{ text: \"Hey there! How can I help you?\", sender: \"bot\" }]);\n        }, 2000);\n    }, []);\n\n    useEffect(() => {\n        if (chatboxRef.current) {\n            chatboxRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n    }, [messages]);\n\n    const handleChat = async () => {\n        if (!question.trim()) return;\n        const userMessage = { text: question, sender: \"user\" };\n        setMessages((prevMessages) => [...prevMessages, userMessage]);\n        setIsLoading(true);\n\n        try {\n            const response = await fetch(\"http://127.0.0.1:5000/ask\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ question }) // ✅ Fixed request body format\n            });\n\n            if (!response.ok) {\n                throw new Error(`Server Error: ${response.status}`);\n            }\n\n            const data = await response.json(); // ✅ Properly parsing JSON response\n            const botReply = data.response || \"Sorry, I couldn't process that.\"; // ✅ Extract response correctly\n\n            const botMessage = { text: botReply, sender: \"bot\" };\n            setMessages((prevMessages) => [...prevMessages, botMessage]);\n            setQuestion(\"\");\n        } catch (error) {\n            toast.error(error.message || \"Something went wrong!\");\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"chat-container\">\n            <h1>Chatbot</h1>\n            <div className=\"chat-box\">\n                {messages.map((message, index) => (\n                    <div\n                        key={index}\n                        className={`message ${message.sender}`}\n                        ref={index === messages.length - 1 ? chatboxRef : null}\n                    >\n                        {message.text}\n                    </div>\n                ))}\n            </div>\n            <div className=\"input-area\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Ask something...\"\n                    value={question}\n                    onChange={(e) => setQuestion(e.target.value)}\n                    onKeyDown={(e) => e.key === \"Enter\" && handleChat()}\n                />\n                <button onClick={handleChat} disabled={isLoading}>\n                    <i className={`bi bi-arrow-up-circle-fill ${isLoading ? \"loading\" : \"\"}`}></i>\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}